#!/usr/bin/env bash

set -e
set -o pipefail

BUILD_DIR=$1
ENV_DIR=$3

# See https://devcenter.heroku.com/articles/buildpack-api#buildpack-api
indent() {
  sed -u 's/^/       /'
}

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in "$env_dir"/*; do
      var=$(echo "$e" | rev | cut -d/ -f1 | rev)
      echo "$var" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$var=$(cat "$e")"
      :
    done
  fi
}

log() {
    echo "-----> $1"
}

if [[ -d $BUILD_DIR/src/air_lms/air_lms/static/report-center ]]; then
  export_env_dir "$ENV_DIR" STATIC_URL
  export_env_dir "$ENV_DIR" REACT_APP_GOOGLE_ANALYTICS_ID
  export_env_dir "$ENV_DIR" REACT_APP_SENTRY_DSN
  export_env_dir "$ENV_DIR" REACT_APP_SENTRY_RELEASE_ID

  log "Building Report Center"
  cd "$BUILD_DIR/src/air_lms/air_lms/static/report-center"

  log "Install pnpm..."
  npm i -g pnpm | indent

  log "Set pnpm store location..."
  npm config set store "${BUILD_DIR}/.pnpm-store" | indent

  log "Building Report Center production assets..."
  CI=true \
    REACT_APP_GOOGLE_ANALYTICS_ID=${REACT_APP_GOOGLE_ANALYTICS_ID} \
    REACT_APP_SENTRY_DSN=${REACT_APP_SENTRY_DSN} \
    REACT_APP_SENTRY_RELEASE_ID=${REACT_APP_SENTRY_RELEASE_ID} \
    bin/full-build.sh | indent

  log "Prepend asset references with ${STATIC_URL}..."
  sed -i -E 's|"/report-center/|"'"${STATIC_URL}"'report-center/|g' build/index.html

  log "Clean up node_modules/..."
  rm -rf node_modules
  for pkg in components icons styles utils
  do
    (
      cd "$BUILD_DIR/src/air_lms/air_lms/static/packages/${pkg}"
      rm -rf node_modules
      rm -rf dist
    )
  done
  rm -rf "$BUILD_DIR/src/air_lms/air_lms/static/packages/veelo-scripts/node_modules"
  rm -rf "${BUILD_DIR}/.pnpm-store"
else
  log "$BUILD_DIR/src/air_lms/air_lms/static/report-center doesn't exist!"
fi
